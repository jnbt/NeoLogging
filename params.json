{"name":"Neologging","tagline":"NeoLogging is a very simple wrapper for UnityEngine.Debug","body":"# NeoLogging: A simple wrapper for logging in `Unity3D`\r\n\r\nNeoLogging is a very simple library for logging using the build-in UnityEngine.Debug class, but allowing a very simple control of logging levels.\r\n\r\n## Installation\r\n\r\nIf you don't have access to [Microsoft VisualStudio](http://msdn.microsoft.com/de-de/vstudio) you can just use Unity3D and its compiler.\r\nOr use your VisualStudio installation in combination with [Visual Studio Tools for Unity](http://unityvs.com) to compile a DLL-file, which\r\ncan be included into your project.\r\n\r\n### Using Unity3D\r\n\r\n* Clone the repository\r\n* Copy the files from `Assets\\NeoLogging` into your project\r\n\r\n### Using VisualStudio\r\n\r\n* Clone the repository\r\n* Open the folder as a Unity3D project\r\n* Install the *free* [Visual Studio Tools for Unity](http://unityvs.com) and import its Unity-package\r\n* Open `UnityVS.NeoLogging.sln`\r\n* [Build a DLL-File](http://forum.unity3d.com/threads/video-tutorial-how-to-use-visual-studio-for-all-your-unity-development.120327)\r\n* Import the DLL and dependencies into your Unity3D project\r\n\r\n## Dependencies\r\n\r\n* [NeoCollections](https://github.com/jnbt/NeoCollections)\r\n\r\n## Usage\r\n\r\nSet the logging level for all instances of a logger:\r\n\r\n```\r\nNeo.Logging.Logger.LogLevel = Neo.Logging.Level.WARN;\r\n\r\n```\r\n\r\nUsing instances of the `Logger` class you can log by sending parameters or a callback which will *only* be called if the logging level matches:\r\n\r\n```\r\nusing Neo.Logging;\r\n\r\nvar logger = new Logger(\"MyClass\");\r\n\r\nlogger.Log(\"This will be logged:\", 12f); // => [MyClass] This will be logged: 12.0\r\n\r\nlogger.Warn(() => \"This will only be called if needed\"); // => This will only be called if needed\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}